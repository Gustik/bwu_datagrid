{"name":"ObservableList","qualifiedName":"polymer/polymer-polymer_element.ObservableList","comment":"<p>Represents an observable list of model values. If any items are added,\nremoved, or replaced, then observers that are listening to <a>polymer/polymer-polymer_element.ChangeNotifier.changes</a>\nwill be notified.</p>","isAbstract":false,"superclass":"polymer/polymer-polymer_element.ListBase","implements":[],"subclass":[],"variables":{},"inheritedVariables":{},"methods":{"setters":{"length=":{"name":"length=","qualifiedName":"polymer/polymer-polymer_element.ObservableList.length=","comment":"<p>Changes the length of this list.</p>\n<p>If newLength is greater than\nthe current length, entries are initialized to <code>null</code>.</p>\n<p>Throws an <a>dart-core.UnsupportedError</a> if the list is fixed-length.</p>","commentFrom":"dart-core.List.length=","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"value":{"name":"value","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.int","inner":[]}],"value":null,"annotations":[]}},"annotations":[{"name":"polymer/observe-src-metadata.reflectable","parameters":[]}]}},"getters":{"isEmpty":{"name":"isEmpty","qualifiedName":"polymer/polymer-polymer_element.ObservableList.isEmpty","comment":"","commentFrom":"dart-collection.ListBase.isEmpty","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.bool","inner":[]}],"parameters":{},"annotations":[{"name":"polymer/observe-src-metadata.reflectable","parameters":[]}]},"isNotEmpty":{"name":"isNotEmpty","qualifiedName":"polymer/polymer-polymer_element.ObservableList.isNotEmpty","comment":"","commentFrom":"dart-collection.ListBase.isNotEmpty","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.bool","inner":[]}],"parameters":{},"annotations":[{"name":"polymer/observe-src-metadata.reflectable","parameters":[]}]},"length":{"name":"length","qualifiedName":"polymer/polymer-polymer_element.ObservableList.length","comment":"<p>Returns the number of objects in this list.</p>\n<p>The valid indices for a list are <code>0</code> through <code>length - 1</code>.</p>","commentFrom":"dart-core.List.length","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.int","inner":[]}],"parameters":{},"annotations":[{"name":"polymer/observe-src-metadata.reflectable","parameters":[]}]},"listChanges":{"name":"listChanges","qualifiedName":"polymer/polymer-polymer_element.ObservableList.listChanges","comment":"<p>The stream of summarized list changes, delivered asynchronously.</p>\n<p>Each list change record contains information about an individual mutation.\nThe records are projected so they can be applied sequentially. For\nexample, this set of mutations:</p>\n<pre><code>var model = new ObservableList.from(['a', 'b']);\nmodel.listChanges.listen((records) =&gt; records.forEach(print));\nmodel.removeAt(1);\nmodel.insertAll(0, ['c', 'd', 'e']);\nmodel.removeRange(1, 3);\nmodel.insert(1, 'f');\n</code></pre>\n<p>The change records will be summarized so they can be \"played back\", using\nthe final list positions to figure out which item was added:</p>\n<pre><code>#&lt;ListChangeRecord index: 0, removed: [], addedCount: 2&gt;\n#&lt;ListChangeRecord index: 3, removed: [b], addedCount: 0&gt;\n</code></pre>\n<p><a>polymer/polymer-polymer_element.ObservableList.deliverChanges</a> can be called to force synchronous delivery.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-async.Stream","inner":[{"outer":"dart-core.List","inner":[{"outer":"polymer/polymer-polymer_element.ListChangeRecord","inner":[]}]}]}],"parameters":{},"annotations":[]}},"constructors":{"":{"name":"","qualifiedName":"polymer/polymer-polymer_element.ObservableList.ObservableList-","comment":"<p>Creates an observable list of the given <a>polymer/polymer-polymer_element.ObservableList.ObservableList-.length</a>.</p>\n<p>If no <a>polymer/polymer-polymer_element.ObservableList.ObservableList-.length</a> argument is supplied an extendable list of\nlength 0 is created.</p>\n<p>If a <a>polymer/polymer-polymer_element.ObservableList.ObservableList-.length</a> argument is supplied, a fixed size list of that\nlength is created.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"length":{"name":"length","optional":true,"named":false,"default":false,"type":[{"outer":"dart-core.int","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"from":{"name":"from","qualifiedName":"polymer/polymer-polymer_element.ObservableList.ObservableList-from","comment":"<p>Creates an observable list with the elements of <a>polymer/polymer-polymer_element.ObservableList.ObservableList-from.other</a>. The order in\nthe list will be the order provided by the iterator of <a>polymer/polymer-polymer_element.ObservableList.ObservableList-from.other</a>.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"polymer/polymer-polymer_element.ObservableList","inner":[{"outer":"polymer-polymer_element.ObservableList.E","inner":[]}]}],"parameters":{"other":{"name":"other","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.Iterable","inner":[{"outer":"polymer-polymer_element.ObservableList.E","inner":[]}]}],"value":null,"annotations":[]}},"annotations":[]}},"operators":{"[]":{"name":"[]","qualifiedName":"polymer/polymer-polymer_element.ObservableList.[]","comment":"<p>Returns the object at the given <a>polymer/polymer-polymer_element.ObservableList.[].index</a> in the list\nor throws a <a>dart-core.RangeError</a> if <a>polymer/polymer-polymer_element.ObservableList.[].index</a> is out of bounds.</p>","commentFrom":"dart-core.List.[]","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"polymer-polymer_element.ObservableList.E","inner":[]}],"parameters":{"index":{"name":"index","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.int","inner":[]}],"value":null,"annotations":[]}},"annotations":[{"name":"polymer/observe-src-metadata.reflectable","parameters":[]}]},"[]=":{"name":"[]=","qualifiedName":"polymer/polymer-polymer_element.ObservableList.[]=","comment":"<p>Sets the value at the given <a>polymer/polymer-polymer_element.ObservableList.[]=.index</a> in the list to <a>polymer/polymer-polymer_element.ObservableList.[]=.value</a>\nor throws a <a>dart-core.RangeError</a> if <a>polymer/polymer-polymer_element.ObservableList.[]=.index</a> is out of bounds.</p>","commentFrom":"dart-core.List.[]=","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"void","inner":[]}],"parameters":{"index":{"name":"index","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.int","inner":[]}],"value":null,"annotations":[]},"value":{"name":"value","optional":false,"named":false,"default":false,"type":[{"outer":"polymer-polymer_element.ObservableList.E","inner":[]}],"value":null,"annotations":[]}},"annotations":[{"name":"polymer/observe-src-metadata.reflectable","parameters":[]}]}},"methods":{"add":{"name":"add","qualifiedName":"polymer/polymer-polymer_element.ObservableList.add","comment":"","commentFrom":"dart-collection.ListBase.add","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"void","inner":[]}],"parameters":{"value":{"name":"value","optional":false,"named":false,"default":false,"type":[{"outer":"polymer-polymer_element.ObservableList.E","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"addAll":{"name":"addAll","qualifiedName":"polymer/polymer-polymer_element.ObservableList.addAll","comment":"","commentFrom":"dart-collection.ListBase.addAll","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"void","inner":[]}],"parameters":{"iterable":{"name":"iterable","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.Iterable","inner":[{"outer":"polymer-polymer_element.ObservableList.E","inner":[]}]}],"value":null,"annotations":[]}},"annotations":[]},"applyChangeRecords":{"name":"applyChangeRecords","qualifiedName":"polymer/polymer-polymer_element.ObservableList.applyChangeRecords","comment":"<p>Updates the <a>polymer/polymer-polymer_element.ObservableList.applyChangeRecords.previous</a> list using the change records. For added items,\nthe <a>polymer/polymer-polymer_element.ObservableList.applyChangeRecords.current</a> list is used to find the current value.</p>","commentFrom":"","inheritedFrom":"","static":true,"abstract":false,"constant":false,"return":[{"outer":"void","inner":[]}],"parameters":{"previous":{"name":"previous","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.List","inner":[{"outer":"dart-core.Object","inner":[]}]}],"value":null,"annotations":[]},"current":{"name":"current","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.List","inner":[{"outer":"dart-core.Object","inner":[]}]}],"value":null,"annotations":[]},"changeRecords":{"name":"changeRecords","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.List","inner":[{"outer":"polymer/polymer-polymer_element.ListChangeRecord","inner":[]}]}],"value":null,"annotations":[]}},"annotations":[]},"calculateChangeRecords":{"name":"calculateChangeRecords","qualifiedName":"polymer/polymer-polymer_element.ObservableList.calculateChangeRecords","comment":"<p>Calculates the changes to the list, if lacking individual splice mutation\ninformation.</p>\n<p>This is not needed for change records produced by <a>polymer/polymer-polymer_element.ObservableList</a> itself,\nbut it can be used if the list instance was replaced by another list.</p>\n<p>The minimal set of splices can be synthesized given the previous state and\nfinal state of a list. The basic approach is to calculate the edit\ndistance matrix and choose the shortest path through it.</p>\n<p>Complexity is <code>O(l * p)</code> where <code>l</code> is the length of the current list and\n<code>p</code> is the length of the old list.</p>","commentFrom":"","inheritedFrom":"","static":true,"abstract":false,"constant":false,"return":[{"outer":"dart-core.List","inner":[{"outer":"polymer/polymer-polymer_element.ListChangeRecord","inner":[]}]}],"parameters":{"oldValue":{"name":"oldValue","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.List","inner":[{"outer":"dart-core.Object","inner":[]}]}],"value":null,"annotations":[]},"newValue":{"name":"newValue","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.List","inner":[{"outer":"dart-core.Object","inner":[]}]}],"value":null,"annotations":[]}},"annotations":[]},"deliverListChanges":{"name":"deliverListChanges","qualifiedName":"polymer/polymer-polymer_element.ObservableList.deliverListChanges","comment":"","commentFrom":"observe.ObservableList.deliverListChanges","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.bool","inner":[]}],"parameters":{},"annotations":[]},"discardListChages":{"name":"discardListChages","qualifiedName":"polymer/polymer-polymer_element.ObservableList.discardListChages","comment":"","commentFrom":"observe.ObservableList.discardListChages","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"void","inner":[]}],"parameters":{},"annotations":[]},"insert":{"name":"insert","qualifiedName":"polymer/polymer-polymer_element.ObservableList.insert","comment":"","commentFrom":"dart-collection.ListBase.insert","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"void","inner":[]}],"parameters":{"index":{"name":"index","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.int","inner":[]}],"value":null,"annotations":[]},"element":{"name":"element","optional":false,"named":false,"default":false,"type":[{"outer":"polymer-polymer_element.ObservableList.E","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"insertAll":{"name":"insertAll","qualifiedName":"polymer/polymer-polymer_element.ObservableList.insertAll","comment":"","commentFrom":"dart-collection.ListBase.insertAll","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"void","inner":[]}],"parameters":{"index":{"name":"index","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.int","inner":[]}],"value":null,"annotations":[]},"iterable":{"name":"iterable","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.Iterable","inner":[{"outer":"polymer-polymer_element.ObservableList.E","inner":[]}]}],"value":null,"annotations":[]}},"annotations":[]},"remove":{"name":"remove","qualifiedName":"polymer/polymer-polymer_element.ObservableList.remove","comment":"","commentFrom":"dart-collection.ListBase.remove","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.bool","inner":[]}],"parameters":{"element":{"name":"element","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.Object","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"removeAt":{"name":"removeAt","qualifiedName":"polymer/polymer-polymer_element.ObservableList.removeAt","comment":"","commentFrom":"dart-collection.ListBase.removeAt","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"polymer-polymer_element.ObservableList.E","inner":[]}],"parameters":{"index":{"name":"index","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.int","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"removeRange":{"name":"removeRange","qualifiedName":"polymer/polymer-polymer_element.ObservableList.removeRange","comment":"","commentFrom":"dart-collection.ListBase.removeRange","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"void","inner":[]}],"parameters":{"start":{"name":"start","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.int","inner":[]}],"value":null,"annotations":[]},"end":{"name":"end","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.int","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"setAll":{"name":"setAll","qualifiedName":"polymer/polymer-polymer_element.ObservableList.setAll","comment":"","commentFrom":"dart-collection.ListBase.setAll","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"void","inner":[]}],"parameters":{"index":{"name":"index","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.int","inner":[]}],"value":null,"annotations":[]},"iterable":{"name":"iterable","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.Iterable","inner":[{"outer":"polymer-polymer_element.ObservableList.E","inner":[]}]}],"value":null,"annotations":[]}},"annotations":[]}}},"inheritedMethods":{"setters":{"length=":{"name":"length=","qualifiedName":"polymer/polymer-polymer_element.ObservableList.length=","comment":"<p>Changes the length of this list.</p>\n<p>If <a>polymer/polymer-polymer_element.ObservableList.length=.newLength</a> is greater than\nthe current length, entries are initialized to <code>null</code>.</p>\n<p>Throws an <a>dart-core.UnsupportedError</a> if the list is fixed-length.</p>","commentFrom":"","inheritedFrom":"dart-core.List.length=","static":false,"abstract":true,"constant":false,"return":[{"outer":"void","inner":[]}],"parameters":{"newLength":{"name":"newLength","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.int","inner":[]}],"value":null,"annotations":[]}},"annotations":[]}},"getters":{"changes":{"name":"changes","qualifiedName":"polymer/polymer-polymer_element.ObservableList.changes","comment":"","commentFrom":"","inheritedFrom":"polymer-polymer_element.ListBase+ChangeNotifier.changes","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-async.Stream","inner":[{"outer":"dart-core.List","inner":[{"outer":"polymer/polymer-polymer_element.ChangeRecord","inner":[]}]}]}],"parameters":{},"annotations":[]},"first":{"name":"first","qualifiedName":"polymer/polymer-polymer_element.ObservableList.first","comment":"","commentFrom":"","inheritedFrom":"polymer-polymer_element.ListBase.first","static":false,"abstract":false,"constant":false,"return":[{"outer":"polymer-polymer_element.ListMixin.E","inner":[]}],"parameters":{},"annotations":[]},"hasObservers":{"name":"hasObservers","qualifiedName":"polymer/polymer-polymer_element.ObservableList.hasObservers","comment":"<p>True if this object has any observers, and should call\n<a>polymer/polymer-polymer_element.ObservableList.notifyPropertyChange</a> for changes.</p>","commentFrom":"","inheritedFrom":"polymer-polymer_element.ListBase+ChangeNotifier.hasObservers","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.bool","inner":[]}],"parameters":{},"annotations":[]},"hashCode":{"name":"hashCode","qualifiedName":"polymer/polymer-polymer_element.ObservableList.hashCode","comment":"<p>Get a hash code for this object.</p>\n<p>All objects have hash codes. Hash codes are guaranteed to be the\nsame for objects that are equal when compared using the equality\noperator <code>==</code>. Other than that there are no guarantees about\nthe hash codes. They will not be consistent between runs and\nthere are no distribution guarantees.</p>\n<p>If a subclass overrides <a>polymer/polymer-polymer_element.ObservableList.hashCode</a> it should override the\nequality operator as well to maintain consistency.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.hashCode","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.int","inner":[]}],"parameters":{},"annotations":[]},"isEmpty":{"name":"isEmpty","qualifiedName":"polymer/polymer-polymer_element.ObservableList.isEmpty","comment":"","commentFrom":"","inheritedFrom":"polymer-polymer_element.ListBase.isEmpty","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.bool","inner":[]}],"parameters":{},"annotations":[]},"isNotEmpty":{"name":"isNotEmpty","qualifiedName":"polymer/polymer-polymer_element.ObservableList.isNotEmpty","comment":"","commentFrom":"","inheritedFrom":"polymer-polymer_element.ListBase.isNotEmpty","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.bool","inner":[]}],"parameters":{},"annotations":[]},"iterator":{"name":"iterator","qualifiedName":"polymer/polymer-polymer_element.ObservableList.iterator","comment":"","commentFrom":"","inheritedFrom":"polymer-polymer_element.ListBase.iterator","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.Iterator","inner":[{"outer":"polymer-polymer_element.ListMixin.E","inner":[]}]}],"parameters":{},"annotations":[]},"last":{"name":"last","qualifiedName":"polymer/polymer-polymer_element.ObservableList.last","comment":"","commentFrom":"","inheritedFrom":"polymer-polymer_element.ListBase.last","static":false,"abstract":false,"constant":false,"return":[{"outer":"polymer-polymer_element.ListMixin.E","inner":[]}],"parameters":{},"annotations":[]},"length":{"name":"length","qualifiedName":"polymer/polymer-polymer_element.ObservableList.length","comment":"<p>Returns the number of objects in this list.</p>\n<p>The valid indices for a list are <code>0</code> through <code>length - 1</code>.</p>","commentFrom":"","inheritedFrom":"dart-core.List.length","static":false,"abstract":true,"constant":false,"return":[{"outer":"dart-core.int","inner":[]}],"parameters":{},"annotations":[]},"reversed":{"name":"reversed","qualifiedName":"polymer/polymer-polymer_element.ObservableList.reversed","comment":"","commentFrom":"","inheritedFrom":"polymer-polymer_element.ListBase.reversed","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.Iterable","inner":[{"outer":"polymer-polymer_element.ListMixin.E","inner":[]}]}],"parameters":{},"annotations":[]},"runtimeType":{"name":"runtimeType","qualifiedName":"polymer/polymer-polymer_element.ObservableList.runtimeType","comment":"<p>A representation of the runtime type of the object.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.runtimeType","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.Type","inner":[]}],"parameters":{},"annotations":[]},"single":{"name":"single","qualifiedName":"polymer/polymer-polymer_element.ObservableList.single","comment":"","commentFrom":"","inheritedFrom":"polymer-polymer_element.ListBase.single","static":false,"abstract":false,"constant":false,"return":[{"outer":"polymer-polymer_element.ListMixin.E","inner":[]}],"parameters":{},"annotations":[]}},"constructors":{},"operators":{"==":{"name":"==","qualifiedName":"polymer/polymer-polymer_element.ObservableList.==","comment":"<p>The equality operator.</p>\n<p>The default behavior for all <a>dart-core.Object</a>s is to return true if and\nonly if <code>this</code> and <a>polymer/polymer-polymer_element.ObservableList.==.other</a> are the same object.</p>\n<p>Override this method to specify a different equality relation on\na class. The overriding method must still be an equivalence relation.\nThat is, it must be:</p><ul><li>\n<p>Total: It must return a boolean for all arguments. It should never throw\n   or return <code>null</code>.</p></li><li>\n<p>Reflexive: For all objects <code>o</code>, <code>o == o</code> must be true.</p></li><li>\n<p>Symmetric: For all objects <code>o1</code> and <code>o2</code>, <code>o1 == o2</code> and <code>o2 == o1</code> must\n   either both be true, or both be false.</p></li><li>\n<p>Transitive: For all objects <code>o1</code>, <code>o2</code>, and <code>o3</code>, if <code>o1 == o2</code> and\n   <code>o2 == o3</code> are true, then <code>o1 == o3</code> must be true.</p></li></ul>\n<p>The method should also be consistent over time, so equality of two objects\nshould not change over time, or at least only change if one of the objects\nwas modified.</p>\n<p>If a subclass overrides the equality operator it should override\nthe <a>polymer/polymer-polymer_element.ObservableList.hashCode</a> method as well to maintain consistency.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.==","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.bool","inner":[]}],"parameters":{"other":{"name":"other","optional":false,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"[]":{"name":"[]","qualifiedName":"polymer/polymer-polymer_element.ObservableList.[]","comment":"<p>Returns the object at the given <a>polymer/polymer-polymer_element.ObservableList.[].index</a> in the list\nor throws a <a>dart-core.RangeError</a> if <a>polymer/polymer-polymer_element.ObservableList.[].index</a> is out of bounds.</p>","commentFrom":"","inheritedFrom":"dart-core.List.[]","static":false,"abstract":true,"constant":false,"return":[{"outer":"dart-core.List.E","inner":[]}],"parameters":{"index":{"name":"index","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.int","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"[]=":{"name":"[]=","qualifiedName":"polymer/polymer-polymer_element.ObservableList.[]=","comment":"<p>Sets the value at the given <a>polymer/polymer-polymer_element.ObservableList.[]=.index</a> in the list to <a>polymer/polymer-polymer_element.ObservableList.[]=.value</a>\nor throws a <a>dart-core.RangeError</a> if <a>polymer/polymer-polymer_element.ObservableList.[]=.index</a> is out of bounds.</p>","commentFrom":"","inheritedFrom":"dart-core.List.[]=","static":false,"abstract":true,"constant":false,"return":[{"outer":"void","inner":[]}],"parameters":{"index":{"name":"index","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.int","inner":[]}],"value":null,"annotations":[]},"value":{"name":"value","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.List.E","inner":[]}],"value":null,"annotations":[]}},"annotations":[]}},"methods":{"add":{"name":"add","qualifiedName":"polymer/polymer-polymer_element.ObservableList.add","comment":"","commentFrom":"","inheritedFrom":"polymer-polymer_element.ListBase.add","static":false,"abstract":false,"constant":false,"return":[{"outer":"void","inner":[]}],"parameters":{"element":{"name":"element","optional":false,"named":false,"default":false,"type":[{"outer":"polymer-polymer_element.ListMixin.E","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"addAll":{"name":"addAll","qualifiedName":"polymer/polymer-polymer_element.ObservableList.addAll","comment":"","commentFrom":"","inheritedFrom":"polymer-polymer_element.ListBase.addAll","static":false,"abstract":false,"constant":false,"return":[{"outer":"void","inner":[]}],"parameters":{"iterable":{"name":"iterable","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.Iterable","inner":[{"outer":"polymer-polymer_element.ListMixin.E","inner":[]}]}],"value":null,"annotations":[]}},"annotations":[]},"any":{"name":"any","qualifiedName":"polymer/polymer-polymer_element.ObservableList.any","comment":"","commentFrom":"","inheritedFrom":"polymer-polymer_element.ListBase.any","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.bool","inner":[]}],"parameters":{"test":{"name":"test","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.Function","inner":[]}],"value":null,"annotations":[],"functionDeclaration":{"return":[{"outer":"dart-core.bool","inner":[]}],"parameters":{"element":{"name":"element","optional":false,"named":false,"default":false,"type":[{"outer":"polymer-polymer_element.ListMixin.E","inner":[]}],"value":null,"annotations":[]}}}}},"annotations":[]},"asMap":{"name":"asMap","qualifiedName":"polymer/polymer-polymer_element.ObservableList.asMap","comment":"","commentFrom":"","inheritedFrom":"polymer-polymer_element.ListBase.asMap","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.Map","inner":[{"outer":"dart-core.int","inner":[]},{"outer":"polymer-polymer_element.ListMixin.E","inner":[]}]}],"parameters":{},"annotations":[]},"clear":{"name":"clear","qualifiedName":"polymer/polymer-polymer_element.ObservableList.clear","comment":"","commentFrom":"","inheritedFrom":"polymer-polymer_element.ListBase.clear","static":false,"abstract":false,"constant":false,"return":[{"outer":"void","inner":[]}],"parameters":{},"annotations":[]},"contains":{"name":"contains","qualifiedName":"polymer/polymer-polymer_element.ObservableList.contains","comment":"","commentFrom":"","inheritedFrom":"polymer-polymer_element.ListBase.contains","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.bool","inner":[]}],"parameters":{"element":{"name":"element","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.Object","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"deliverChanges":{"name":"deliverChanges","qualifiedName":"polymer/polymer-polymer_element.ObservableList.deliverChanges","comment":"","commentFrom":"","inheritedFrom":"polymer-polymer_element.ListBase+ChangeNotifier.deliverChanges","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.bool","inner":[]}],"parameters":{},"annotations":[]},"elementAt":{"name":"elementAt","qualifiedName":"polymer/polymer-polymer_element.ObservableList.elementAt","comment":"","commentFrom":"","inheritedFrom":"polymer-polymer_element.ListBase.elementAt","static":false,"abstract":false,"constant":false,"return":[{"outer":"polymer-polymer_element.ListMixin.E","inner":[]}],"parameters":{"index":{"name":"index","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.int","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"every":{"name":"every","qualifiedName":"polymer/polymer-polymer_element.ObservableList.every","comment":"","commentFrom":"","inheritedFrom":"polymer-polymer_element.ListBase.every","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.bool","inner":[]}],"parameters":{"test":{"name":"test","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.Function","inner":[]}],"value":null,"annotations":[],"functionDeclaration":{"return":[{"outer":"dart-core.bool","inner":[]}],"parameters":{"element":{"name":"element","optional":false,"named":false,"default":false,"type":[{"outer":"polymer-polymer_element.ListMixin.E","inner":[]}],"value":null,"annotations":[]}}}}},"annotations":[]},"expand":{"name":"expand","qualifiedName":"polymer/polymer-polymer_element.ObservableList.expand","comment":"","commentFrom":"","inheritedFrom":"polymer-polymer_element.ListBase.expand","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.Iterable","inner":[]}],"parameters":{"f":{"name":"f","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.Function","inner":[]}],"value":null,"annotations":[],"functionDeclaration":{"return":[{"outer":"dart-core.Iterable","inner":[]}],"parameters":{"element":{"name":"element","optional":false,"named":false,"default":false,"type":[{"outer":"polymer-polymer_element.ListMixin.E","inner":[]}],"value":null,"annotations":[]}}}}},"annotations":[]},"fillRange":{"name":"fillRange","qualifiedName":"polymer/polymer-polymer_element.ObservableList.fillRange","comment":"","commentFrom":"","inheritedFrom":"polymer-polymer_element.ListBase.fillRange","static":false,"abstract":false,"constant":false,"return":[{"outer":"void","inner":[]}],"parameters":{"start":{"name":"start","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.int","inner":[]}],"value":null,"annotations":[]},"end":{"name":"end","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.int","inner":[]}],"value":null,"annotations":[]},"fill":{"name":"fill","optional":true,"named":false,"default":false,"type":[{"outer":"polymer-polymer_element.ListMixin.E","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"firstWhere":{"name":"firstWhere","qualifiedName":"polymer/polymer-polymer_element.ObservableList.firstWhere","comment":"","commentFrom":"","inheritedFrom":"polymer-polymer_element.ListBase.firstWhere","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"test":{"name":"test","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.Function","inner":[]}],"value":null,"annotations":[],"functionDeclaration":{"return":[{"outer":"dart-core.bool","inner":[]}],"parameters":{"element":{"name":"element","optional":false,"named":false,"default":false,"type":[{"outer":"polymer-polymer_element.ListMixin.E","inner":[]}],"value":null,"annotations":[]}}}},"orElse":{"name":"orElse","optional":true,"named":true,"default":false,"type":[{"outer":"dart-core.Function","inner":[]}],"value":null,"annotations":[],"functionDeclaration":{"return":[{"outer":"dart-core.Object","inner":[]}],"parameters":{}}}},"annotations":[]},"fold":{"name":"fold","qualifiedName":"polymer/polymer-polymer_element.ObservableList.fold","comment":"","commentFrom":"","inheritedFrom":"polymer-polymer_element.ListBase.fold","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"initialValue":{"name":"initialValue","optional":false,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":null,"annotations":[]},"combine":{"name":"combine","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.Function","inner":[]}],"value":null,"annotations":[],"functionDeclaration":{"return":[{"outer":"dynamic","inner":[]}],"parameters":{"previousValue":{"name":"previousValue","optional":false,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":null,"annotations":[]},"element":{"name":"element","optional":false,"named":false,"default":false,"type":[{"outer":"polymer-polymer_element.ListMixin.E","inner":[]}],"value":null,"annotations":[]}}}}},"annotations":[]},"forEach":{"name":"forEach","qualifiedName":"polymer/polymer-polymer_element.ObservableList.forEach","comment":"","commentFrom":"","inheritedFrom":"polymer-polymer_element.ListBase.forEach","static":false,"abstract":false,"constant":false,"return":[{"outer":"void","inner":[]}],"parameters":{"action":{"name":"action","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.Function","inner":[]}],"value":null,"annotations":[],"functionDeclaration":{"return":[{"outer":"void","inner":[]}],"parameters":{"element":{"name":"element","optional":false,"named":false,"default":false,"type":[{"outer":"polymer-polymer_element.ListMixin.E","inner":[]}],"value":null,"annotations":[]}}}}},"annotations":[]},"getRange":{"name":"getRange","qualifiedName":"polymer/polymer-polymer_element.ObservableList.getRange","comment":"","commentFrom":"","inheritedFrom":"polymer-polymer_element.ListBase.getRange","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.Iterable","inner":[{"outer":"polymer-polymer_element.ListMixin.E","inner":[]}]}],"parameters":{"start":{"name":"start","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.int","inner":[]}],"value":null,"annotations":[]},"end":{"name":"end","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.int","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"indexOf":{"name":"indexOf","qualifiedName":"polymer/polymer-polymer_element.ObservableList.indexOf","comment":"","commentFrom":"","inheritedFrom":"polymer-polymer_element.ListBase.indexOf","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.int","inner":[]}],"parameters":{"element":{"name":"element","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.Object","inner":[]}],"value":null,"annotations":[]},"startIndex":{"name":"startIndex","optional":true,"named":false,"default":true,"type":[{"outer":"dart-core.int","inner":[]}],"value":"0","annotations":[]}},"annotations":[]},"insert":{"name":"insert","qualifiedName":"polymer/polymer-polymer_element.ObservableList.insert","comment":"","commentFrom":"","inheritedFrom":"polymer-polymer_element.ListBase.insert","static":false,"abstract":false,"constant":false,"return":[{"outer":"void","inner":[]}],"parameters":{"index":{"name":"index","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.int","inner":[]}],"value":null,"annotations":[]},"element":{"name":"element","optional":false,"named":false,"default":false,"type":[{"outer":"polymer-polymer_element.ListMixin.E","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"insertAll":{"name":"insertAll","qualifiedName":"polymer/polymer-polymer_element.ObservableList.insertAll","comment":"","commentFrom":"","inheritedFrom":"polymer-polymer_element.ListBase.insertAll","static":false,"abstract":false,"constant":false,"return":[{"outer":"void","inner":[]}],"parameters":{"index":{"name":"index","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.int","inner":[]}],"value":null,"annotations":[]},"iterable":{"name":"iterable","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.Iterable","inner":[{"outer":"polymer-polymer_element.ListMixin.E","inner":[]}]}],"value":null,"annotations":[]}},"annotations":[]},"join":{"name":"join","qualifiedName":"polymer/polymer-polymer_element.ObservableList.join","comment":"","commentFrom":"","inheritedFrom":"polymer-polymer_element.ListBase.join","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.String","inner":[]}],"parameters":{"separator":{"name":"separator","optional":true,"named":false,"default":true,"type":[{"outer":"dart-core.String","inner":[]}],"value":"\"\"","annotations":[]}},"annotations":[]},"lastIndexOf":{"name":"lastIndexOf","qualifiedName":"polymer/polymer-polymer_element.ObservableList.lastIndexOf","comment":"<p>Returns the last index in the list a of the given <a>polymer/polymer-polymer_element.ObservableList.lastIndexOf.element</a>, starting\nthe search at index <a>polymer/polymer-polymer_element.ObservableList.lastIndexOf.startIndex</a> to 0.\nReturns -1 if <a>polymer/polymer-polymer_element.ObservableList.lastIndexOf.element</a> is not found.</p>","commentFrom":"","inheritedFrom":"polymer-polymer_element.ListBase.lastIndexOf","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.int","inner":[]}],"parameters":{"element":{"name":"element","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.Object","inner":[]}],"value":null,"annotations":[]},"startIndex":{"name":"startIndex","optional":true,"named":false,"default":false,"type":[{"outer":"dart-core.int","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"lastWhere":{"name":"lastWhere","qualifiedName":"polymer/polymer-polymer_element.ObservableList.lastWhere","comment":"","commentFrom":"","inheritedFrom":"polymer-polymer_element.ListBase.lastWhere","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"test":{"name":"test","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.Function","inner":[]}],"value":null,"annotations":[],"functionDeclaration":{"return":[{"outer":"dart-core.bool","inner":[]}],"parameters":{"element":{"name":"element","optional":false,"named":false,"default":false,"type":[{"outer":"polymer-polymer_element.ListMixin.E","inner":[]}],"value":null,"annotations":[]}}}},"orElse":{"name":"orElse","optional":true,"named":true,"default":false,"type":[{"outer":"dart-core.Function","inner":[]}],"value":null,"annotations":[],"functionDeclaration":{"return":[{"outer":"dart-core.Object","inner":[]}],"parameters":{}}}},"annotations":[]},"map":{"name":"map","qualifiedName":"polymer/polymer-polymer_element.ObservableList.map","comment":"","commentFrom":"","inheritedFrom":"polymer-polymer_element.ListBase.map","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.Iterable","inner":[]}],"parameters":{"f":{"name":"f","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.Function","inner":[]}],"value":null,"annotations":[],"functionDeclaration":{"return":[{"outer":"dynamic","inner":[]}],"parameters":{"element":{"name":"element","optional":false,"named":false,"default":false,"type":[{"outer":"polymer-polymer_element.ListMixin.E","inner":[]}],"value":null,"annotations":[]}}}}},"annotations":[]},"noSuchMethod":{"name":"noSuchMethod","qualifiedName":"polymer/polymer-polymer_element.ObservableList.noSuchMethod","comment":"<p><a>polymer/polymer-polymer_element.ObservableList.noSuchMethod</a> is invoked when users invoke a non-existent method\non an object. The name of the method and the arguments of the\ninvocation are passed to <a>polymer/polymer-polymer_element.ObservableList.noSuchMethod</a> in an <a>dart-core.Invocation</a>.\nIf <a>polymer/polymer-polymer_element.ObservableList.noSuchMethod</a> returns a value, that value becomes the result of\nthe original invocation.</p>\n<p>The default behavior of <a>polymer/polymer-polymer_element.ObservableList.noSuchMethod</a> is to throw a\n<a>dart-core.NoSuchMethodError</a>.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.noSuchMethod","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"invocation":{"name":"invocation","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.Invocation","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"notifyChange":{"name":"notifyChange","qualifiedName":"polymer/polymer-polymer_element.ObservableList.notifyChange","comment":"","commentFrom":"","inheritedFrom":"polymer-polymer_element.ListBase+ChangeNotifier.notifyChange","static":false,"abstract":false,"constant":false,"return":[{"outer":"void","inner":[]}],"parameters":{"record":{"name":"record","optional":false,"named":false,"default":false,"type":[{"outer":"polymer/polymer-polymer_element.ChangeRecord","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"notifyPropertyChange":{"name":"notifyPropertyChange","qualifiedName":"polymer/polymer-polymer_element.ObservableList.notifyPropertyChange","comment":"<p>Notify that the field name of this object has been changed.</p>\n<p>The <a>polymer/polymer-polymer_element.ObservableList.notifyPropertyChange.oldValue</a> and <a>polymer/polymer-polymer_element.ObservableList.notifyPropertyChange.newValue</a> are also recorded. If the two values are\nequal, no change will be recorded.</p>\n<p>For convenience this returns <a>polymer/polymer-polymer_element.ObservableList.notifyPropertyChange.newValue</a>. This makes it easy to use in a\nsetter:</p>\n<pre><code>var _myField;\n@reflectable get myField =&gt; _myField;\n@reflectable set myField(value) {\n  _myField = notifyPropertyChange(#myField, _myField, value);\n}\n</code></pre>","commentFrom":"","inheritedFrom":"polymer-polymer_element.ListBase+ChangeNotifier.notifyPropertyChange","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"field":{"name":"field","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.Symbol","inner":[]}],"value":null,"annotations":[]},"oldValue":{"name":"oldValue","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.Object","inner":[]}],"value":null,"annotations":[]},"newValue":{"name":"newValue","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.Object","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"observed":{"name":"observed","qualifiedName":"polymer/polymer-polymer_element.ObservableList.observed","comment":"<p>Override this method to be called when the <a>polymer/polymer-polymer_element.ObservableList.changes</a> are first observed.</p>","commentFrom":"","inheritedFrom":"polymer-polymer_element.ListBase+ChangeNotifier.observed","static":false,"abstract":false,"constant":false,"return":[{"outer":"void","inner":[]}],"parameters":{},"annotations":[]},"reduce":{"name":"reduce","qualifiedName":"polymer/polymer-polymer_element.ObservableList.reduce","comment":"","commentFrom":"","inheritedFrom":"polymer-polymer_element.ListBase.reduce","static":false,"abstract":false,"constant":false,"return":[{"outer":"polymer-polymer_element.ListMixin.E","inner":[]}],"parameters":{"combine":{"name":"combine","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.Function","inner":[]}],"value":null,"annotations":[],"functionDeclaration":{"return":[{"outer":"polymer-polymer_element.ListMixin.E","inner":[]}],"parameters":{"previousValue":{"name":"previousValue","optional":false,"named":false,"default":false,"type":[{"outer":"polymer-polymer_element.ListMixin.E","inner":[]}],"value":null,"annotations":[]},"element":{"name":"element","optional":false,"named":false,"default":false,"type":[{"outer":"polymer-polymer_element.ListMixin.E","inner":[]}],"value":null,"annotations":[]}}}}},"annotations":[]},"remove":{"name":"remove","qualifiedName":"polymer/polymer-polymer_element.ObservableList.remove","comment":"","commentFrom":"","inheritedFrom":"polymer-polymer_element.ListBase.remove","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.bool","inner":[]}],"parameters":{"element":{"name":"element","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.Object","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"removeAt":{"name":"removeAt","qualifiedName":"polymer/polymer-polymer_element.ObservableList.removeAt","comment":"","commentFrom":"","inheritedFrom":"polymer-polymer_element.ListBase.removeAt","static":false,"abstract":false,"constant":false,"return":[{"outer":"polymer-polymer_element.ListMixin.E","inner":[]}],"parameters":{"index":{"name":"index","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.int","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"removeLast":{"name":"removeLast","qualifiedName":"polymer/polymer-polymer_element.ObservableList.removeLast","comment":"","commentFrom":"","inheritedFrom":"polymer-polymer_element.ListBase.removeLast","static":false,"abstract":false,"constant":false,"return":[{"outer":"polymer-polymer_element.ListMixin.E","inner":[]}],"parameters":{},"annotations":[]},"removeRange":{"name":"removeRange","qualifiedName":"polymer/polymer-polymer_element.ObservableList.removeRange","comment":"","commentFrom":"","inheritedFrom":"polymer-polymer_element.ListBase.removeRange","static":false,"abstract":false,"constant":false,"return":[{"outer":"void","inner":[]}],"parameters":{"start":{"name":"start","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.int","inner":[]}],"value":null,"annotations":[]},"end":{"name":"end","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.int","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"removeWhere":{"name":"removeWhere","qualifiedName":"polymer/polymer-polymer_element.ObservableList.removeWhere","comment":"","commentFrom":"","inheritedFrom":"polymer-polymer_element.ListBase.removeWhere","static":false,"abstract":false,"constant":false,"return":[{"outer":"void","inner":[]}],"parameters":{"test":{"name":"test","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.Function","inner":[]}],"value":null,"annotations":[],"functionDeclaration":{"return":[{"outer":"dart-core.bool","inner":[]}],"parameters":{"element":{"name":"element","optional":false,"named":false,"default":false,"type":[{"outer":"polymer-polymer_element.ListMixin.E","inner":[]}],"value":null,"annotations":[]}}}}},"annotations":[]},"replaceRange":{"name":"replaceRange","qualifiedName":"polymer/polymer-polymer_element.ObservableList.replaceRange","comment":"","commentFrom":"","inheritedFrom":"polymer-polymer_element.ListBase.replaceRange","static":false,"abstract":false,"constant":false,"return":[{"outer":"void","inner":[]}],"parameters":{"start":{"name":"start","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.int","inner":[]}],"value":null,"annotations":[]},"end":{"name":"end","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.int","inner":[]}],"value":null,"annotations":[]},"newContents":{"name":"newContents","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.Iterable","inner":[{"outer":"polymer-polymer_element.ListMixin.E","inner":[]}]}],"value":null,"annotations":[]}},"annotations":[]},"retainWhere":{"name":"retainWhere","qualifiedName":"polymer/polymer-polymer_element.ObservableList.retainWhere","comment":"","commentFrom":"","inheritedFrom":"polymer-polymer_element.ListBase.retainWhere","static":false,"abstract":false,"constant":false,"return":[{"outer":"void","inner":[]}],"parameters":{"test":{"name":"test","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.Function","inner":[]}],"value":null,"annotations":[],"functionDeclaration":{"return":[{"outer":"dart-core.bool","inner":[]}],"parameters":{"element":{"name":"element","optional":false,"named":false,"default":false,"type":[{"outer":"polymer-polymer_element.ListMixin.E","inner":[]}],"value":null,"annotations":[]}}}}},"annotations":[]},"setAll":{"name":"setAll","qualifiedName":"polymer/polymer-polymer_element.ObservableList.setAll","comment":"","commentFrom":"","inheritedFrom":"polymer-polymer_element.ListBase.setAll","static":false,"abstract":false,"constant":false,"return":[{"outer":"void","inner":[]}],"parameters":{"index":{"name":"index","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.int","inner":[]}],"value":null,"annotations":[]},"iterable":{"name":"iterable","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.Iterable","inner":[{"outer":"polymer-polymer_element.ListMixin.E","inner":[]}]}],"value":null,"annotations":[]}},"annotations":[]},"setRange":{"name":"setRange","qualifiedName":"polymer/polymer-polymer_element.ObservableList.setRange","comment":"","commentFrom":"","inheritedFrom":"polymer-polymer_element.ListBase.setRange","static":false,"abstract":false,"constant":false,"return":[{"outer":"void","inner":[]}],"parameters":{"start":{"name":"start","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.int","inner":[]}],"value":null,"annotations":[]},"end":{"name":"end","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.int","inner":[]}],"value":null,"annotations":[]},"iterable":{"name":"iterable","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.Iterable","inner":[{"outer":"polymer-polymer_element.ListMixin.E","inner":[]}]}],"value":null,"annotations":[]},"skipCount":{"name":"skipCount","optional":true,"named":false,"default":true,"type":[{"outer":"dart-core.int","inner":[]}],"value":"0","annotations":[]}},"annotations":[]},"shuffle":{"name":"shuffle","qualifiedName":"polymer/polymer-polymer_element.ObservableList.shuffle","comment":"","commentFrom":"","inheritedFrom":"polymer-polymer_element.ListBase.shuffle","static":false,"abstract":false,"constant":false,"return":[{"outer":"void","inner":[]}],"parameters":{"random":{"name":"random","optional":true,"named":false,"default":false,"type":[{"outer":"dart-math.Random","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"singleWhere":{"name":"singleWhere","qualifiedName":"polymer/polymer-polymer_element.ObservableList.singleWhere","comment":"","commentFrom":"","inheritedFrom":"polymer-polymer_element.ListBase.singleWhere","static":false,"abstract":false,"constant":false,"return":[{"outer":"polymer-polymer_element.ListMixin.E","inner":[]}],"parameters":{"test":{"name":"test","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.Function","inner":[]}],"value":null,"annotations":[],"functionDeclaration":{"return":[{"outer":"dart-core.bool","inner":[]}],"parameters":{"element":{"name":"element","optional":false,"named":false,"default":false,"type":[{"outer":"polymer-polymer_element.ListMixin.E","inner":[]}],"value":null,"annotations":[]}}}}},"annotations":[]},"skip":{"name":"skip","qualifiedName":"polymer/polymer-polymer_element.ObservableList.skip","comment":"","commentFrom":"","inheritedFrom":"polymer-polymer_element.ListBase.skip","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.Iterable","inner":[{"outer":"polymer-polymer_element.ListMixin.E","inner":[]}]}],"parameters":{"count":{"name":"count","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.int","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"skipWhile":{"name":"skipWhile","qualifiedName":"polymer/polymer-polymer_element.ObservableList.skipWhile","comment":"","commentFrom":"","inheritedFrom":"polymer-polymer_element.ListBase.skipWhile","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.Iterable","inner":[{"outer":"polymer-polymer_element.ListMixin.E","inner":[]}]}],"parameters":{"test":{"name":"test","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.Function","inner":[]}],"value":null,"annotations":[],"functionDeclaration":{"return":[{"outer":"dart-core.bool","inner":[]}],"parameters":{"element":{"name":"element","optional":false,"named":false,"default":false,"type":[{"outer":"polymer-polymer_element.ListMixin.E","inner":[]}],"value":null,"annotations":[]}}}}},"annotations":[]},"sort":{"name":"sort","qualifiedName":"polymer/polymer-polymer_element.ObservableList.sort","comment":"","commentFrom":"","inheritedFrom":"polymer-polymer_element.ListBase.sort","static":false,"abstract":false,"constant":false,"return":[{"outer":"void","inner":[]}],"parameters":{"compare":{"name":"compare","optional":true,"named":false,"default":false,"type":[{"outer":"dart-core.Function","inner":[]}],"value":null,"annotations":[],"functionDeclaration":{"return":[{"outer":"dart-core.int","inner":[]}],"parameters":{"a":{"name":"a","optional":false,"named":false,"default":false,"type":[{"outer":"polymer-polymer_element.ListMixin.E","inner":[]}],"value":null,"annotations":[]},"b":{"name":"b","optional":false,"named":false,"default":false,"type":[{"outer":"polymer-polymer_element.ListMixin.E","inner":[]}],"value":null,"annotations":[]}}}}},"annotations":[]},"sublist":{"name":"sublist","qualifiedName":"polymer/polymer-polymer_element.ObservableList.sublist","comment":"","commentFrom":"","inheritedFrom":"polymer-polymer_element.ListBase.sublist","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.List","inner":[{"outer":"polymer-polymer_element.ListMixin.E","inner":[]}]}],"parameters":{"start":{"name":"start","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.int","inner":[]}],"value":null,"annotations":[]},"end":{"name":"end","optional":true,"named":false,"default":false,"type":[{"outer":"dart-core.int","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"take":{"name":"take","qualifiedName":"polymer/polymer-polymer_element.ObservableList.take","comment":"","commentFrom":"","inheritedFrom":"polymer-polymer_element.ListBase.take","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.Iterable","inner":[{"outer":"polymer-polymer_element.ListMixin.E","inner":[]}]}],"parameters":{"count":{"name":"count","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.int","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"takeWhile":{"name":"takeWhile","qualifiedName":"polymer/polymer-polymer_element.ObservableList.takeWhile","comment":"","commentFrom":"","inheritedFrom":"polymer-polymer_element.ListBase.takeWhile","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.Iterable","inner":[{"outer":"polymer-polymer_element.ListMixin.E","inner":[]}]}],"parameters":{"test":{"name":"test","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.Function","inner":[]}],"value":null,"annotations":[],"functionDeclaration":{"return":[{"outer":"dart-core.bool","inner":[]}],"parameters":{"element":{"name":"element","optional":false,"named":false,"default":false,"type":[{"outer":"polymer-polymer_element.ListMixin.E","inner":[]}],"value":null,"annotations":[]}}}}},"annotations":[]},"toList":{"name":"toList","qualifiedName":"polymer/polymer-polymer_element.ObservableList.toList","comment":"","commentFrom":"","inheritedFrom":"polymer-polymer_element.ListBase.toList","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.List","inner":[{"outer":"polymer-polymer_element.ListMixin.E","inner":[]}]}],"parameters":{"growable":{"name":"growable","optional":true,"named":true,"default":true,"type":[{"outer":"dart-core.bool","inner":[]}],"value":"true","annotations":[]}},"annotations":[]},"toSet":{"name":"toSet","qualifiedName":"polymer/polymer-polymer_element.ObservableList.toSet","comment":"","commentFrom":"","inheritedFrom":"polymer-polymer_element.ListBase.toSet","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.Set","inner":[{"outer":"polymer-polymer_element.ListMixin.E","inner":[]}]}],"parameters":{},"annotations":[]},"toString":{"name":"toString","qualifiedName":"polymer/polymer-polymer_element.ObservableList.toString","comment":"<p>Returns a string representation of this object.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.toString","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.String","inner":[]}],"parameters":{},"annotations":[]},"unobserved":{"name":"unobserved","qualifiedName":"polymer/polymer-polymer_element.ObservableList.unobserved","comment":"<p>Override this method to be called when the <a>polymer/polymer-polymer_element.ObservableList.changes</a> are no longer being\nobserved.</p>","commentFrom":"","inheritedFrom":"polymer-polymer_element.ListBase+ChangeNotifier.unobserved","static":false,"abstract":false,"constant":false,"return":[{"outer":"void","inner":[]}],"parameters":{},"annotations":[]},"where":{"name":"where","qualifiedName":"polymer/polymer-polymer_element.ObservableList.where","comment":"","commentFrom":"","inheritedFrom":"polymer-polymer_element.ListBase.where","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.Iterable","inner":[{"outer":"polymer-polymer_element.ListMixin.E","inner":[]}]}],"parameters":{"test":{"name":"test","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.Function","inner":[]}],"value":null,"annotations":[],"functionDeclaration":{"return":[{"outer":"dart-core.bool","inner":[]}],"parameters":{"element":{"name":"element","optional":false,"named":false,"default":false,"type":[{"outer":"polymer-polymer_element.ListMixin.E","inner":[]}],"value":null,"annotations":[]}}}}},"annotations":[]}}},"annotations":[],"generics":{"E":{"name":"E","type":"dart.core.Object"}}}