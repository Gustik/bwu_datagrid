{"name":"PropertyPath","qualifiedName":"polymer/polymer-polymer_element.PropertyPath","comment":"<p>A dot-delimieted property path such as \"foo.bar\" or \"foo.10.bar\".</p>\n<p>The path specifies how to get a particular value from an object graph, where\nthe graph can include arrays and maps. Each segment of the path describes\nhow to take a single step in the object graph. Properties like 'foo' or\n'bar' are read as properties on objects, or as keys if the object is a <a>polymer/dart-core.Map</a>\nor a <a>polymer/polymer-polymer_element.Indexable</a>, while integer values are read as indexes in a <a>polymer/dart-core.List</a>.</p>","isAbstract":false,"superclass":"dart-core.Object","implements":[],"subclass":[],"variables":{},"inheritedVariables":{},"methods":{"setters":{},"getters":{"hashCode":{"name":"hashCode","qualifiedName":"polymer/polymer-polymer_element.PropertyPath.hashCode","comment":"<p>This is the <a href=\"http://en.wikipedia.org/wiki/Jenkins_hash_function\">Jenkins hash function</a> but using masking to keep\nvalues in SMI range.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.int","inner":[]}],"parameters":{},"annotations":[]},"isEmpty":{"name":"isEmpty","qualifiedName":"polymer/polymer-polymer_element.PropertyPath.isEmpty","comment":"","commentFrom":"observe.PropertyPath.isEmpty","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.bool","inner":[]}],"parameters":{},"annotations":[]},"isValid":{"name":"isValid","qualifiedName":"polymer/polymer-polymer_element.PropertyPath.isValid","comment":"","commentFrom":"observe.PropertyPath.isValid","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.bool","inner":[]}],"parameters":{},"annotations":[]},"length":{"name":"length","qualifiedName":"polymer/polymer-polymer_element.PropertyPath.length","comment":"","commentFrom":"observe.PropertyPath.length","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.int","inner":[]}],"parameters":{},"annotations":[]}},"constructors":{"":{"name":"","qualifiedName":"polymer/polymer-polymer_element.PropertyPath.PropertyPath-","comment":"<p>Creates a new <a>polymer/polymer-polymer_element.PropertyPath</a>. These can be stored to avoid excessive\nparsing of path strings.</p>\n<p>The provided <a>polymer/polymer-polymer_element.PropertyPath.PropertyPath-.path</a> should be a String or a List. If it is a list it\nshould contain only Symbols and integers. This can be used to avoid\nparsing.</p>\n<p>Note that this constructor will canonicalize identical paths in some cases\nto save memory, but this is not guaranteed. Use <a>polymer/polymer-polymer_element.PropertyPath.==</a> for comparions\npurposes instead of <a>dart-core.identical</a>.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"polymer/polymer-polymer_element.PropertyPath","inner":[]}],"parameters":{"path":{"name":"path","optional":true,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":null,"annotations":[]}},"annotations":[]}},"operators":{"==":{"name":"==","qualifiedName":"polymer/polymer-polymer_element.PropertyPath.==","comment":"<p>The equality operator.</p>\n<p>The default behavior for all <a>dart-core.Object</a>s is to return true if and\nonly if <code>this</code> and <a>polymer/polymer-polymer_element.PropertyPath.==.other</a> are the same object.</p>\n<p>Override this method to specify a different equality relation on\na class. The overriding method must still be an equivalence relation.\nThat is, it must be:</p><ul><li>\n<p>Total: It must return a boolean for all arguments. It should never throw\n   or return <code>null</code>.</p></li><li>\n<p>Reflexive: For all objects <code>o</code>, <code>o == o</code> must be true.</p></li><li>\n<p>Symmetric: For all objects <code>o1</code> and <code>o2</code>, <code>o1 == o2</code> and <code>o2 == o1</code> must\n   either both be true, or both be false.</p></li><li>\n<p>Transitive: For all objects <code>o1</code>, <code>o2</code>, and <code>o3</code>, if <code>o1 == o2</code> and\n   <code>o2 == o3</code> are true, then <code>o1 == o3</code> must be true.</p></li></ul>\n<p>The method should also be consistent over time, so equality of two objects\nshould not change over time, or at least only change if one of the objects\nwas modified.</p>\n<p>If a subclass overrides the equality operator it should override\nthe <a>polymer/polymer-polymer_element.PropertyPath.hashCode</a> method as well to maintain consistency.</p>","commentFrom":"dart-core.Object.==","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.bool","inner":[]}],"parameters":{"other":{"name":"other","optional":false,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":null,"annotations":[]}},"annotations":[]}},"methods":{"getValueFrom":{"name":"getValueFrom","qualifiedName":"polymer/polymer-polymer_element.PropertyPath.getValueFrom","comment":"<p>Returns the current value of the path from the provided <a>polymer/polymer-polymer_element.PropertyPath.getValueFrom.obj</a>ect.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"obj":{"name":"obj","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.Object","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"setValueFrom":{"name":"setValueFrom","qualifiedName":"polymer/polymer-polymer_element.PropertyPath.setValueFrom","comment":"<p>Attempts to set the <a>polymer/polymer-polymer_element.PropertyPath.setValueFrom.value</a> of the path from the provided <a>polymer/polymer-polymer_element.PropertyPath.setValueFrom.obj</a>ect.\nReturns true if and only if the path was reachable and set.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.bool","inner":[]}],"parameters":{"obj":{"name":"obj","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.Object","inner":[]}],"value":null,"annotations":[]},"value":{"name":"value","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.Object","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"toString":{"name":"toString","qualifiedName":"polymer/polymer-polymer_element.PropertyPath.toString","comment":"<p>Returns a string representation of this object.</p>","commentFrom":"dart-core.Object.toString","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.String","inner":[]}],"parameters":{},"annotations":[]}}},"inheritedMethods":{"setters":{},"getters":{"hashCode":{"name":"hashCode","qualifiedName":"polymer/polymer-polymer_element.PropertyPath.hashCode","comment":"<p>Get a hash code for this object.</p>\n<p>All objects have hash codes. Hash codes are guaranteed to be the\nsame for objects that are equal when compared using the equality\noperator <code>==</code>. Other than that there are no guarantees about\nthe hash codes. They will not be consistent between runs and\nthere are no distribution guarantees.</p>\n<p>If a subclass overrides <a>polymer/polymer-polymer_element.PropertyPath.hashCode</a> it should override the\nequality operator as well to maintain consistency.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.hashCode","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.int","inner":[]}],"parameters":{},"annotations":[]},"runtimeType":{"name":"runtimeType","qualifiedName":"polymer/polymer-polymer_element.PropertyPath.runtimeType","comment":"<p>A representation of the runtime type of the object.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.runtimeType","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.Type","inner":[]}],"parameters":{},"annotations":[]}},"constructors":{},"operators":{"==":{"name":"==","qualifiedName":"polymer/polymer-polymer_element.PropertyPath.==","comment":"<p>The equality operator.</p>\n<p>The default behavior for all <a>dart-core.Object</a>s is to return true if and\nonly if <code>this</code> and <a>polymer/polymer-polymer_element.PropertyPath.==.other</a> are the same object.</p>\n<p>Override this method to specify a different equality relation on\na class. The overriding method must still be an equivalence relation.\nThat is, it must be:</p><ul><li>\n<p>Total: It must return a boolean for all arguments. It should never throw\n   or return <code>null</code>.</p></li><li>\n<p>Reflexive: For all objects <code>o</code>, <code>o == o</code> must be true.</p></li><li>\n<p>Symmetric: For all objects <code>o1</code> and <code>o2</code>, <code>o1 == o2</code> and <code>o2 == o1</code> must\n   either both be true, or both be false.</p></li><li>\n<p>Transitive: For all objects <code>o1</code>, <code>o2</code>, and <code>o3</code>, if <code>o1 == o2</code> and\n   <code>o2 == o3</code> are true, then <code>o1 == o3</code> must be true.</p></li></ul>\n<p>The method should also be consistent over time, so equality of two objects\nshould not change over time, or at least only change if one of the objects\nwas modified.</p>\n<p>If a subclass overrides the equality operator it should override\nthe <a>polymer/polymer-polymer_element.PropertyPath.hashCode</a> method as well to maintain consistency.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.==","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.bool","inner":[]}],"parameters":{"other":{"name":"other","optional":false,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":null,"annotations":[]}},"annotations":[]}},"methods":{"noSuchMethod":{"name":"noSuchMethod","qualifiedName":"polymer/polymer-polymer_element.PropertyPath.noSuchMethod","comment":"<p><a>polymer/polymer-polymer_element.PropertyPath.noSuchMethod</a> is invoked when users invoke a non-existent method\non an object. The name of the method and the arguments of the\ninvocation are passed to <a>polymer/polymer-polymer_element.PropertyPath.noSuchMethod</a> in an <a>dart-core.Invocation</a>.\nIf <a>polymer/polymer-polymer_element.PropertyPath.noSuchMethod</a> returns a value, that value becomes the result of\nthe original invocation.</p>\n<p>The default behavior of <a>polymer/polymer-polymer_element.PropertyPath.noSuchMethod</a> is to throw a\n<a>dart-core.NoSuchMethodError</a>.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.noSuchMethod","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"invocation":{"name":"invocation","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.Invocation","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"toString":{"name":"toString","qualifiedName":"polymer/polymer-polymer_element.PropertyPath.toString","comment":"<p>Returns a string representation of this object.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.toString","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.String","inner":[]}],"parameters":{},"annotations":[]}}},"annotations":[],"generics":{}}