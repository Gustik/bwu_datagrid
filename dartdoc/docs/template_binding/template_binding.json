{"name":"template_binding","qualifiedName":"template_binding/template_binding","comment":"<p>This library provides access to the Polymer project's\n<a href=\"http://www.polymer-project.org/docs/polymer/databinding.html\">Data Binding</a>\nFind more information at the\n<a href=\"https://www.dartlang.org/polymer-dart/\">Polymer.dart homepage</a>.</p>\n<p>Extends the capabilities of the HTML Template Element by enabling it to\ncreate, manage, and remove instances of content bound to data defined in\nDart.</p>\n<p>Node.bind() is a new method added to all DOM nodes which instructs them to\nbind the named property to the data provided. These allows applications to\ncreate a data model in Dart or JavaScript that DOM reacts to.</p>","variables":{},"functions":{"setters":{},"getters":{},"constructors":{},"operators":{},"methods":{"isSemanticTemplate":{"name":"isSemanticTemplate","qualifiedName":"template_binding/template_binding.isSemanticTemplate","comment":"<p>Returns true if this node is semantically a template.</p>\n<p>A node is a template if tagName is TEMPLATE, or the node has the\n'template' attribute and this tag supports attribute form for backwards\ncompatibility with existing HTML parsers. The nodes that can use attribute\nform are table elments (THEAD, TBODY, TFOOT, TH, TR, TD, CAPTION, COLGROUP\nand COL), OPTION, and OPTGROUP.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.bool","inner":[]}],"parameters":{"n":{"name":"n","optional":false,"named":false,"default":false,"type":[{"outer":"dart-dom-html.Node","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"nodeBind":{"name":"nodeBind","qualifiedName":"template_binding/template_binding.nodeBind","comment":"<p>Provides access to the data binding APIs for the <a>template_binding/template_binding.nodeBind.node</a>. For example:</p>\n<pre><code>nodeBind(node).bind('checked', model, 'path.to.some.value');\n</code></pre>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"template_binding/template_binding.NodeBindExtension","inner":[]}],"parameters":{"node":{"name":"node","optional":false,"named":false,"default":false,"type":[{"outer":"dart-dom-html.Node","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"nodeBindFallback":{"name":"nodeBindFallback","qualifiedName":"template_binding/template_binding.nodeBindFallback","comment":"<p>Like <a>template_binding/template_binding.nodeBind</a>, but intended to be used only within a custom element that\nimplements <a>template_binding/template_binding.NodeBindExtension</a>. This method can be used to simulate a super\ncall. For example:</p>\n<pre><code>class FancyButton extends ButtonElement implements NodeBindExtension {\n  bind(name, model, path) {\n    if (name == 'fancy-prop') ... // do fancy binding\n    // otherwise, fall back to superclass\n    return nodeBindFallback(this).bind(name, model, path);\n  }\n  ...\n}\n</code></pre>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"template_binding/template_binding.NodeBindExtension","inner":[]}],"parameters":{"node":{"name":"node","optional":false,"named":false,"default":false,"type":[{"outer":"dart-dom-html.Node","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"templateBind":{"name":"templateBind","qualifiedName":"template_binding/template_binding.templateBind","comment":"<p>Provides access to the data binding APIs for the <a>template_binding/template_binding.templateBind.node</a>. For example:</p>\n<pre><code>templateBind(node).model = new MyModel();\n</code></pre>\n<p>This is equivalent to <a>template_binding/template_binding.nodeBind</a>, but provides access to\n<a>template_binding/template_binding.TemplateBindExtension</a> APIs. <a>template_binding/template_binding.templateBind.node</a> should be a <a>template_binding/dart-dom-html.TemplateElement</a>, or\nequivalent semantic template such as:</p>\n<pre><code>&lt;table template repeat=\"{{row in rows}}\"&gt;\n  &lt;tr template repeat=\"{{item in row}}\"&gt;\n    &lt;td&gt;{{item}}&lt;/td&gt;\n  &lt;/tr&gt;\n&lt;/table&gt;\n</code></pre>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"template_binding/template_binding.TemplateBindExtension","inner":[]}],"parameters":{"node":{"name":"node","optional":false,"named":false,"default":false,"type":[{"outer":"dart-dom-html.Element","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"templateBindFallback":{"name":"templateBindFallback","qualifiedName":"template_binding/template_binding.templateBindFallback","comment":"<p>Like <a>template_binding/template_binding.templateBind</a>, but intended to be used only within a custom element\nthat implements <a>template_binding/template_binding.TemplateBindExtension</a>. This method can be used to simulate\na super call. For example:</p>\n<pre><code>class CoolTemplate extends TemplateElement\n    implements TemplateBindExtension {\n\n  createInstance(model, delegate) {\n    // do something cool...\n    // otherwise, fall back to superclass\n    return templateBindFallback(this).createInstance(model, delegate);\n  }\n  ...\n}\n</code></pre>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"template_binding/template_binding.TemplateBindExtension","inner":[]}],"parameters":{"node":{"name":"node","optional":false,"named":false,"default":false,"type":[{"outer":"dart-dom-html.Element","inner":[]}],"value":null,"annotations":[]}},"annotations":[]}}},"classes":{"class":[{"name":"BindingDelegate","qualifiedName":"template_binding/template_binding.BindingDelegate","preview":"<p>Template Bindings native features enables a wide-range of use cases,\nbut (by design) don't attempt to implement a wide array of specialized\nbehaviors.</p>"},{"name":"NodeBindExtension","qualifiedName":"template_binding/template_binding.NodeBindExtension","preview":"<p>Extensions to the <a>template_binding/dart-dom-html.Node</a> API.</p>"},{"name":"TemplateBindExtension","qualifiedName":"template_binding/template_binding.TemplateBindExtension","preview":"<p>Extensions to <a>template_binding/dart-dom-html.Element</a>s that behave as templates.</p>"},{"name":"TemplateInstance","qualifiedName":"template_binding/template_binding.TemplateInstance","preview":"<p>Information about the instantiated template.</p>"}],"typedef":{"PrepareBindingFunction":{"name":"PrepareBindingFunction","qualifiedName":"template_binding/template_binding.PrepareBindingFunction","comment":"","return":"dynamic","parameters":{"model":{"name":"model","optional":false,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":null,"annotations":[]},"node":{"name":"node","optional":false,"named":false,"default":false,"type":[{"outer":"dart-dom-html.Node","inner":[]}],"value":null,"annotations":[]},"oneTime":{"name":"oneTime","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.bool","inner":[]}],"value":null,"annotations":[]}},"annotations":[],"generics":{}},"PrepareInstanceModelFunction":{"name":"PrepareInstanceModelFunction","qualifiedName":"template_binding/template_binding.PrepareInstanceModelFunction","comment":"","return":"dynamic","parameters":{"model":{"name":"model","optional":false,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":null,"annotations":[]}},"annotations":[],"generics":{}},"PrepareInstancePositionChangedFunction":{"name":"PrepareInstancePositionChangedFunction","qualifiedName":"template_binding/template_binding.PrepareInstancePositionChangedFunction","comment":"","return":"dynamic","parameters":{"instance":{"name":"instance","optional":false,"named":false,"default":false,"type":[{"outer":"template_binding/template_binding.TemplateInstance","inner":[]}],"value":null,"annotations":[]},"index":{"name":"index","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.int","inner":[]}],"value":null,"annotations":[]}},"annotations":[],"generics":{}}},"error":[]},"packageName":"template_binding","packageIntro":""}