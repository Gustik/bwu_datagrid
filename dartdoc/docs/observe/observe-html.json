{"name":"observe-html","qualifiedName":"observe/observe-html","comment":"<p>Helpers for exposing dart:html as observable data.</p>","variables":{"windowLocation":{"name":"windowLocation","qualifiedName":"observe/observe-html.windowLocation","comment":"<p>An observable version of window.location.hash.</p>","final":true,"static":false,"constant":false,"type":[{"outer":"observe/observe-html.ObservableLocationHash","inner":[]}],"annotations":[]}},"functions":{"setters":{},"getters":{},"constructors":{},"operators":{},"methods":{"bindCssClass":{"name":"bindCssClass","qualifiedName":"observe/observe-html.bindCssClass","comment":"<p><em>Deprecated</em> use <code>class=\"{{ binding }}\"</code> in your HTML instead. It will also\nwork on a <code>&lt;polymer-element&gt;</code>.</p>\n<p>Bind a CSS class to the observable <a>observe/observe-html.bindCssClass.object</a> and property <a>observe/observe-html.bindCssClass.path</a>.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"observe/observe-src-path_observer.PathObserver","inner":[]}],"parameters":{"element":{"name":"element","optional":false,"named":false,"default":false,"type":[{"outer":"dart-dom-html.Element","inner":[]}],"value":null,"annotations":[]},"className":{"name":"className","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.String","inner":[]}],"value":null,"annotations":[]},"object":{"name":"object","optional":false,"named":false,"default":false,"type":[{"outer":"observe/observe-html.Observable","inner":[]}],"value":null,"annotations":[]},"path":{"name":"path","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.String","inner":[]}],"value":null,"annotations":[]}},"annotations":[{"name":"observe/dart-core.deprecated","parameters":[]}]},"updateCssClass":{"name":"updateCssClass","qualifiedName":"observe/observe-html.updateCssClass","comment":"<p><em>Deprecated</em> use <a>observe/dart-dom-html.CssClassSet.toggle</a> instead.</p>\n<p>Add or remove CSS class <a>observe/observe-html.updateCssClass.className</a> based on the <a>observe/observe-html.updateCssClass.value</a>.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"void","inner":[]}],"parameters":{"element":{"name":"element","optional":false,"named":false,"default":false,"type":[{"outer":"dart-dom-html.Element","inner":[]}],"value":null,"annotations":[]},"className":{"name":"className","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.String","inner":[]}],"value":null,"annotations":[]},"value":{"name":"value","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.bool","inner":[]}],"value":null,"annotations":[]}},"annotations":[{"name":"observe/dart-core.deprecated","parameters":[]}]}}},"classes":{"class":[{"name":"ObservableLocationHash","qualifiedName":"observe/observe-html.ObservableLocationHash"}],"typedef":{},"error":[]},"packageName":"observe","packageIntro":""}