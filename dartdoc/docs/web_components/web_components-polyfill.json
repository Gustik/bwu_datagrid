{"name":"web_components-polyfill","qualifiedName":"web_components/web_components-polyfill","comment":"<p>Dart APIs for interacting with the JavaScript Custom Elements polyfill.</p>","variables":{"customElementsReady":{"name":"customElementsReady","qualifiedName":"web_components/web_components-polyfill.customElementsReady","comment":"<p>A future that completes once all custom elements in the initial HTML page\nhave been upgraded.</p>\n<p>This is needed because the native implementation can update the elements\nwhile parsing the HTML document, but the custom element polyfill cannot,\nso it completes this future once all elements are upgraded.</p>","final":false,"static":false,"constant":false,"type":[{"outer":"dart-async.Future","inner":[]}],"annotations":[]}},"functions":{"setters":{},"getters":{},"constructors":{},"operators":{},"methods":{"customElementsTakeRecords":{"name":"customElementsTakeRecords","qualifiedName":"web_components/web_components-polyfill.customElementsTakeRecords","comment":"<p><em>Note</em> this API is primarily intended for tests. In other code it is better\nto write it in a style that works with or without the polyfill, rather than\nusing this method.</p>\n<p>Synchronously trigger evaluation of pending lifecycle events, which otherwise\nneed to wait for a <a>web_components/dart-dom-html.MutationObserver</a> to signal the changes in the polyfill.\nThis method can be used to resolve differences in timing between native and\npolyfilled custom elements.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"void","inner":[]}],"parameters":{},"annotations":[]}}},"classes":{"class":[],"typedef":{},"error":[]},"packageName":"web_components","packageIntro":"<h1>Web Components</h1>\n<p>This package has the polyfills for\n<a href=\"http://www.polymer-project.org/platform/shadow-dom.html\">Shadow DOM</a>,\n<a href=\"http://www.polymer-project.org/platform/custom-elements.html\">Custom Elements</a>,\nand <a href=\"http://www.polymer-project.org/platform/html-imports.html\">HTML Imports</a>.</p>\n<p>These features exist in dart:html, for example\n<a href=\"https://api.dartlang.org/apidocs/channels/stable/#dart-dom-html.Element@id_createShadowRoot\">Element.reateShadowRoot</a>\nand <a href=\"https://api.dartlang.org/apidocs/channels/stable/#dart-dom-html.HtmlDocument@id_register\">Document.register</a>.\nHowever those APIs are not supported on all browsers yet unless you\nload the polyfills, as indicated below.</p>\n<h2>Getting started</h2>\n<p>Include the polyfills in your HTML <code>&lt;head&gt;</code> to enable Shadow DOM:</p>\n<pre class=\"html\"><code>&lt;script src=\"packages/web_components/platform.js\"&gt;&lt;/script&gt;\n&lt;script src=\"packages/web_components/dart_support.js\"&gt;&lt;/script&gt;\n</code></pre>\n<p>You can also use an unminfied version for development:</p>\n<pre class=\"html\"><code>&lt;script src=\"packages/web_components/platform.concat.js\"&gt;&lt;/script&gt;\n&lt;script src=\"packages/web_components/dart_support.js\"&gt;&lt;/script&gt;\n</code></pre>\n<p>Because the Shadow DOM polyfill does extensive DOM patching, platform.js should\nbe included <strong>before</strong> other script tags. Be sure to include dart_support.js\ntoo, it is required for the Shadow DOM polyfill to work with\n<a href=\"https://www.dartlang.org/docs/dart-up-and-running/contents/ch04-tools-dart2js.html\">dart2js</a>.</p>\n<h2>Custom Elements</h2>\n<p>Custom Elements let authors define their own elements. Authors associate\nJavaScript or Dart code with custom tag names, and then use those custom tag\nnames as they would any standard tag.</p>\n<p>For example, after registering a special kind of button called <code>super-button</code>,\nuse the super button just like this:</p>\n<pre class=\"html\"><code>&lt;super-button&gt;&lt;/super-button&gt;\n</code></pre>\n<p>Custom elements are still elements. We can create, use, manipulate, and compose\nthem just as easily as any standard <code>&lt;div&gt;</code> or <code>&lt;span&gt;</code> today.</p>\n<p>See the Polymer <a href=\"http://www.polymer-project.org/platform/custom-elements.html\">Custom Elements page</a>\nfor more information.</p>\n<h2>Shadow DOM</h2>\n<p>Shadow DOM is designed to provide encapsulation by hiding DOM subtrees under\nshadow roots. It provides a method of establishing and maintaining functional\nboundaries between DOM trees and how these trees interact with each other within\na document, thus enabling better functional encapsulation within the DOM.</p>\n<p>See the Polymer <a href=\"http://www.polymer-project.org/platform/shadow-dom.html\">Shadow DOM page</a>\nfor more information.</p>\n<h2>Hacking on this package</h2>\n<p>To rebuild platform.js:</p>\n<pre class=\"bash\"><code># Make a directory like ~/src/polymer\nmkdir ~/src/polymer\ncd ~/src/polymer\ngit clone https://github.com/polymer/tools\n\n# Sync polymer repositories\n./tools/bin/pull-all-polymer.sh\n\n# If you don't have \"npm\", get it here: http://nodejs.org\ncd platform-dev\nnpm install\ngrunt minify audit\ncd build\n\n# Copy the build output to your Dart source tree\ncp build.log platform* ~/dart/dart/pkg/web_components/lib\n</code></pre>"}